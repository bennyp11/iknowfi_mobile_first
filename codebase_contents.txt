< START CODEBASE />
---
CONTENTS OF codebase_contents.txt START HERE
---
---
---
CONTENTS OF css/iknowfi_mobile_first.css START HERE
---
/**
 * Fades at top and bottom of .h5p-column-content
 * (which has default 40px top/bottom padding).
 */
/***
.h5p-column-content {
  position: relative;
  background-color: #fff;
  padding-top: 0 !important;
  padding-right: 40px !important;
  padding-left: 40px !important;
}

.h5p-column-content::before,
.h5p-column-content::after {
  content: "";
  position: absolute;
  left: 0;    
  right: 0;   
  height: 80px;       
  z-index: 9999;      
  pointer-events: none;
}

.h5p-column-content::before {
  top: 0;
background: linear-gradient(to bottom, #ffffff 0%, #ffffff75, #ffffff00, #ffffff00, #ffffff00);
}

.h5p-column-content::after {
  bottom: 0;
background: linear-gradient(to top, #ffffff 0%, #ffffff75, #ffffff00, #ffffff00, #ffffff00);
}

.h5p-column-content-iframe-parent {
  padding: 40px;
}

.h5p-column-content-iframe-parent .h5p-column-content { padding: 0 !important; }
**/

@media (max-width: 768px) {
   div.content-box.lp_progress_wrapper {  margin-top: 2.25rem !important; margin-bottom: 0 !important; }
   .page-opigno-module-group-answer-form .back-btn a { display: none !important; }
   .dialog-off-canvas-main-canvas header.page-header { padding: .625rem 0 .625rem !important; }
   header.page-header .col-left, header.page-header .col-right {
        padding-left: .275rem !important;
        padding-right: .275rem !important;
    }
   div.content-box.lp_progress_wrapper { background-color: #f5f5f5 !important; }
  .h5p-column-content.h5p-advanced-text { padding: .675rem 0px 0px !important;}
  .mobile-menu-btn { margin-top: 1.1rem !important; }
  .block-system-branding-block { margin-right: .275rem !important; }
  .dialog-off-canvas-main-canvas .page-main>.container {padding-top: unset !important;}
  .opigno_activity__wrapper { padding: 0px !important; }
  .opigno_activity { padding: 0 !important; border: none !important; }
  .content-box { padding: .75rem .75rem !important; box-shadow: none !important; border: none !important; }
   div.h5p-content ul.h5p-actions { display: none !important; }
  .h5p-interactive-book-status-chapter h1.title {font-size: 12px !important; padding: 0 0 !important;}
  .h5p-content { border: none !important;}
  .module-title-wrapper .fullscreen-link { display: none !important; }
  .h5p-interactive-book-status-fullscreen { display: none !important; }
  .h5p-interactive-book-status-menu .icon-menu { color: #002d72 !important; }
  .h5p-interactive-book-status-progress-number { color: #002d72 !important; }
  .h5p-interactive-book-status-arrow .navigation-button { color: #002d72 !important; }
}

---
---
CONTENTS OF generate_codebase.sh START HERE
---
#!/bin/bash

# Define the output file
output_file="codebase_contents.txt"

# Define an array of files and folders to ignore
ignore_list=(
  ".git"
  "node_modules"
  "vendor"
  "features.json"
  "faq.json"
  "curriculum.json"
)

# Function to check if an item matches the ignore list
should_ignore() {
  local item="$1"
  for pattern in "${ignore_list[@]}"; do
    if [[ "$item" == $pattern || "$item" == *"/$pattern"* ]]; then
      return 0 # True: Should ignore
    fi
  done
  return 1 # False: Should not ignore
}

# Start the codebase section
echo "< START CODEBASE />" > "$output_file"

# Function to recursively list files and their contents
generate_contents() {
  local dir="$1"

  # Loop through each file and directory in the given directory
  for item in "$dir"/*; do
    # Check if the item should be ignored
    if should_ignore "$item"; then
      continue
    fi

    # Check if it is a directory, if so, call the function recursively
    if [[ -d "$item" ]]; then
      generate_contents "$item"
    elif [[ -f "$item" ]]; then
      # Get the relative path to the file from the base directory
      rel_path="${item#./}"

      # Print the contents of the file to the output file
      echo -e "---\nCONTENTS OF $rel_path START HERE\n---" >> "$output_file"
      cat "$item" >> "$output_file"
      echo "---" >> "$output_file" # Close the content block with dashes
    fi
  done
}

# Start by generating contents from the current directory
generate_contents "."

# End the codebase section
echo "< END CODEBASE />" >> "$output_file"

# Output the generated file
echo "File '$output_file' generated successfully."
---
---
CONTENTS OF iknowfi_mobile_first.info.yml START HERE
---
name: iKnowFi Mobile First
type: module
description: "A Mobile Forward App Redesign."
core_version_requirement: ^9 || ^10
package: Custom
---
---
CONTENTS OF iknowfi_mobile_first.libraries.yml START HERE
---
iknowfi_mobile_first:
  version: 1.x
  js:
    # 2) Then include our custom script
    js/iknowfi_mobile_first.js: {}
  dependencies:
    - core/jquery

iknowfi_mobile_first_css:
  version: 1.x
  css:
    theme:
      css/iknowfi_mobile_first.css: {}
---
---
CONTENTS OF iknowfi_mobile_first.module START HERE
---
<?php

/**
 * @file
 * Contains \Drupal\iknowfi_mobile_first\iknowfi_mobile_first.module
 */

/**
 * Implements hook_page_attachments().
 *
 * This ensures our library (iframe_resizer) is attached on every page 
 * or you can add conditions if you only want it on certain routes.
 */
function iknowfi_mobile_first_page_attachments(array &$attachments) {
  // Attach our custom library site-wide (remove conditions if always needed).
  $attachments['#attached']['library'][] = 'iknowfi_mobile_first/iknowfi_mobile_first';
  $attachments['#attached']['library'][] = 'iknowfi_mobile_first/iknowfi_mobile_first_css';
}
---
---
CONTENTS OF js/iknowfi_mobile_first.js START HERE
---
(function ($, Drupal) {
  'use strict';

  Drupal.behaviors.iknowfiMobileFirst = {
    attach: function (context, settings) {
      setInterval(function () {
       
      }, 1000); 
    }
  };

})(jQuery, Drupal);
---
< END CODEBASE />
